---
- name: Building and running Jupyter Notebook container
  hosts: localhost
  vars_prompt:
  - name: jupyternotebook_version
    prompt: "Enter the Jupyter notebook version you require - ensure it is available as a tag at https://hub.docker.com/r/jupyter/datascience-notebook/tags/ e.g. notebook-6.4.5"
    private: no
  - name: pubkey_path
    prompt: "Enter the path to your ssh public key on your local machine, e.g. ~/.ssh/id_rsa.key.pub"
    private: no
  tasks:
  - name: Create a data folder
    command: mkdir /data
    become: yes
    args:
      creates: /data
  - name: Change ownership of data folder
    command: chown ubuntu:ubuntu /data
    become: yes
    args:
      warn: false
  - name: Mount data folder
    shell: |
      DATADIR="/data"
      DIR="/dev/vdc"
      DIR2="/dev/sdc"
      if grep -qs /dev/vdc /proc/mounts; then
        true
      else
        if [[ -d "$DIR" ]]; then
          true
        else
         sudo mkfs.ext4 /dev/vdc
         sudo mount /dev/vdc /data
         mkdir /data/containers
        fi
      fi
      if grep -qs /dev/sdc /proc/mounts; then
        true
      else
        if [[ -d "$DIR" ]]; then
          true
        else
         sudo mkfs.ext4 /dev/sdc
         sudo mount /dev/sdc /data
         mkdir /data/containers
        fi
      fi      
    become: yes
    ignore_errors: yes
  - name: Pulling the Singularity container
    command: singularity pull --dir /data/containers/ docker://jupyter/datascience-notebook:{{ jupyternotebook_version }}
    become: yes
    args:
      creates: "/data/containers/datascience-notebook_{{ jupyternotebook_version }}.sif"
  - name: Stop any current Jupyter Notebooks on port 8888
    shell: singularity exec /data/containers/datascience-notebook_{{ jupyternotebook_version }}.sif jupyter notebook stop 8888
    become: yes
    ignore_errors: yes
  - name: Run Jupyter Notebook server
    shell: nohup singularity exec -B /data /data/containers/datascience-notebook_{{ jupyternotebook_version }}.sif jupyter notebook --notebook-dir=/data --ip='0.0.0.0' --port=8888 --no-browser --allow-root &
    become: yes
  - name: Wait for Jupyter Notebook server to run
    wait_for:
      timeout: 30
  - name: Run instructions script
    script: run_jupyternotebook.sh '{{ pubkey_path }}' '{{ jupyternotebook_version }}'
    become: yes
    register: result
  - name: Print Jupyter Notebook instructions
    debug: 
      var: result.stdout_lines
